<?php

/**
 * Slider_Model_Doctrine_BaseSlide
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $slider_id
 * @property string $title
 * @property integer $title_pos_x
 * @property integer $title_pos_y
 * @property string $title_color
 * @property integer $title_size
 * @property string $description
 * @property integer $description_pos_x
 * @property integer $description_pos_y
 * @property string $description_color
 * @property integer $description_size
 * @property string $description_bg_color
 * @property integer $description_bg_width
 * @property integer $description_bg_height
 * @property string $animation
 * @property integer $photo_root_id
 * @property clob $target_href
 * @property Slider_Model_Doctrine_Slider $Slider
 * 
 * @package    Admi
 * @subpackage Slider
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Slider_Model_Doctrine_BaseSlide extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('slider_slide');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('slider_id', 'string', 128, array(
             'type' => 'string',
             'length' => '128',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('title_pos_x', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('title_pos_y', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('title_color', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('title_size', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('description_pos_x', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description_pos_y', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description_color', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('description_size', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description_bg_color', 'string', 12, array(
             'type' => 'string',
             'length' => '12',
             ));
        $this->hasColumn('description_bg_width', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('description_bg_height', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('animation', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('photo_root_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('target_href', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Slider_Model_Doctrine_Slider as Slider', array(
             'local' => 'id',
             'foreign' => 'slide_root_id'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             ));
        $this->actAs($nestedset0);
    }
}