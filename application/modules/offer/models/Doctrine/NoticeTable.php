<?php

/**
 * Offer_Model_Doctrine_NoticeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Offer_Model_Doctrine_NoticeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object Offer_Model_Doctrine_NoticeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Offer_Model_Doctrine_Notice');
    }
    
    public function getNoticeQueryWithCategoryAndNoticeTemplateAndParameters() {
        $q = $this->createQuery('n')
                ->addSelect('n.*')
                ->addSelect('c.*')
                ->addSelect('nt.*')
                ->addSelect('p.*')
                ->addSelect('pt.*')
                ->leftJoin('n.Category c')
                ->leftJoin('n.NoticeTemplate nt')
                ->leftJoin('n.Parameters p')
                ->leftJoin('p.ParameterTemplate pt')
                ->andWhere('p.level > ?', 0)
                ->addOrderBy('p.lft ASC')
                ;
        return $q;
                
    }
    
    public function getNoticeQueryWithCategoryAndNoticeTemplateAndParametersById($id) {
        $q = $this->getNoticeQueryWithCategoryAndNoticeTemplateAndParameters();
        $q->andWhere('n.id = ?', $id);
//        $q = $this->createQuery('n')
//                ->addSelect('n.*')
//                ->addSelect('nt.*')
//                ->addSelect('p.*')
//                ->addSelect('pt.*')
//                ->leftJoin('n.NoticeTemplate nt')
//                ->leftJoin('n.Parameters p')
//                ->leftJoin('p.ParameterTemplate pt')
//                ->andWhere('p.level > ?', 0)
//                ->andWhere('n.id = ?', $id)
//                ->addOrderBy('p.lft ASC')
//                ;
        return $q;
    }
    
    public function getNoticeQueryWithDealsAndDealMessages(Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->getNoticeQueryWithCategoryAndNoticeTemplateAndParameters();
        }
        $q->addSelect('d.*, COUNT(DISTINCT d.id) as deal_count');
        $q->addSelect('dm.*, COUNT(DISTINCT dm.id) as deal_message_count');
        $q->addSelect('u.*');
        $q->leftJoin('n.Deals d');
        $q->leftJoin('d.Messages dm');
        $q->leftJoin('n.User u');
        return $q;
    }
    
    public function getNoticeQueryWithParametersByUserId($userId) {
        $q = $this->createQuery('n')
                ->select('n.*')
                ->addSelect('p.*')
                ->leftJoin('n.Parameters p')
                ->andWhere('p.level > ?', 0)
                ->andWhere('n.user_id = ?', $userId)
                ->addOrderBy('p.lft ASC')
                ;
        return $q;
    }
}